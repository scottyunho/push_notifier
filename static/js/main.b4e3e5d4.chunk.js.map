{"version":3,"sources":["logo.svg","App.js","BoxList.js","index.js"],"names":["Octokit","makeStyles","theme","typographyCard","outstandingBoxContainer","backgroundColor","borderRadius","minWidth","maxHeight","marginLeft","marginBottom","overflowY","overflowX","height","width","scrollMarginTop","boxShadow","webkitBoxShadow","outline","card","maxWidth","minListWidth","typographyOutstandingTitle","textAlign","require","REPOSITORY_OWNER","REPOSITORY_NAME","useStyles","ListItem","React","Component","props","classes","Card","className","style","Typography","fontWeight","item","Author","Branch","Date","Message","OutstandingBox","useState","AllActivity","setAllActivity","octokit","auth","rest","users","getAuthenticated","useEffect","a","activity","listRepoEvents","owner","repo","temp","fetchData","Box","pt","ml","Grid","direction","justify","alignItems","pl","pr","tempObject","finalArray","data","map","doc","type","payload","commits","commit","author","name","message","ref","created_at","substring","trim","push","processAllActivity","console","log","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b4e3e5d4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport BoxList from './BoxList.js'\nimport Typography from '@material-ui/core/Typography';\nimport Card from \"@material-ui/core/Card\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\n\n//const GitHub = require('github-api');\nconst { Octokit } = require(\"@octokit/rest\");\n\nconst TOKEN = \"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\";\nconst REPOSITORY_OWNER = \"celinashen\";\nconst REPOSITORY_NAME = \"Flock\"\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  typographyCard: {\n    \"fontFamily\": \"Poppins\",\n    \"fontSize\": 20,\n    \"color\": \"#979B82\"\n  },\n  outstandingBoxContainer:{\n    backgroundColor: \"#769E76\",\n    borderRadius: \"20px\",\n    minWidth: 900,\n    maxHeight: 320,\n    marginLeft: 120,\n    marginBottom: 200,\n    overflowY: 'scroll',\n    overflowX: 'hidden',\n    height: \"100%\",\n    '&::-webkit-scrollbar': {\n      width: '0.45em',\n      height: '0.1em',\n      scrollMarginTop: '10px'\n      \n    },\n    '&::-webkit-scrollbar-track': {\n      boxShadow: 'inset 0 0 6px rgba(0,0,0,0.00)',\n      webkitBoxShadow: 'inset 0 0 6px rgba(0,0,0,0.00)',\n      scrollMarginTop: '10px'\n    },\n    '&::-webkit-scrollbar-thumb': {\n      height: '6px',\n      backgroundColor: 'rgba(0,0,0,.3)',\n      outline: '1px solid slategrey',\n      borderRadius: '10px',\n      scrollMarginTop: '10px'\n    },\n  },\n  card:{\n    borderRadius: 10,\n    maxWidth: \"200%\"\n  },\n  minListWidth:{\n    maxWidth: 1500,\n    maxHeight: 500\n  },\n  typographyOutstandingTitle:{\n    \"fontFamily\": \"Poppins\",\n    \"fontSize\": 25,\n    \"color\": \"#979B82\", \n    textAlign: 'center'\n  },\n}));\n\n\nclass Input extends React.Component {      \n  constructor(props) {\n      super(props);\n      this.state = {value: ''};\n\n      this.handleChange = this.handleChange.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n      this.setState({value: event.target.value});\n  }\n\n  handleSubmit(event) {\n      //alert('A name was submitted: ' + this.state.value);\n      event.preventDefault();\n      //process data here\n  }\n\n  render() {\n  return (\n      <form onSubmit={this.handleSubmit}>\n      <label>\n          Name:\n          <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\n      </label>\n      <input type=\"submit\" value=\"Submit\" />\n      </form>\n  );\n  }\n}\n\n\n\nconst ListItem=(props)=> {\n  const classes = useStyles();\n  return (\n    <Card className = {classes.card} style={{boxShadow: \"none\"}}>\n      <Typography className = {classes.typographyCard} style={{fontWeight: 500}}>\n        {props.item.Author} | {props.item.Branch} | {props.item.Date}\n        <br />\n        {props.item.Message}\n        <br />\n        -----------------------------------\n      </Typography>\n    </Card>\n  );\n}\n\n\n\nconst OutstandingBox=()=>{\n  const classes = useStyles();\n\n  const [AllActivity, setAllActivity] = useState('');\n  //const [DataArray, setDataArray] = useState('')\n\n  const octokit = new Octokit({\n    auth: TOKEN,\n  });\n  const user = octokit.rest.users.getAuthenticated();\n\n\n\n  useEffect(() => {\n    async function fetchData() {\n      var temp = await octokit.rest.activity.listRepoEvents({ owner: REPOSITORY_OWNER, repo: REPOSITORY_NAME })\n      setAllActivity(temp);\n    }\n    fetchData()\n  }, []);\n\n\n\n  function processAllActivity() {\n    //format into object data structure: {Author: \"\", Message: \"\", Branch: \"\", Date: \"\"}\n    var finalArray = [];\n    var tempObject;\n    //console.log(AllActivity.data)\n    AllActivity.data.map(doc => {\n      tempObject = {Author: \"\", Message: \"\", Branch: \"\", Date: \"\"};\n      if (doc.type==\"PushEvent\")\n        doc.payload.commits.map(commit => {\n          tempObject[\"Author\"] = commit.author.name;\n          tempObject[\"Message\"] += \" \"+commit.message;\n        })\n      tempObject[\"Branch\"] = doc.payload.ref;\n      tempObject[\"Date\"] = doc.created_at.substring(0,10);\n      if (tempObject[\"Message\"].trim() == \"\")\n        tempObject[\"Message\"] = \"New Branch Push\"\n      finalArray.push(tempObject);\n    })\n    return finalArray;\n  }\n\n\n  return(\n    <div>\n      <Box pt = {6} ml = {20}>\n        <Typography className = {classes.typographyOutstandingTitle} style={{fontWeight: 500}}>\n          All Recent Commits\n        </Typography>\n      </Box>\n      <Grid>\n        <Grid direction = \"column\" justify = \"center\" alignItems = \"center\" className = {classes.outstandingBoxContainer} >\n          <Box pl = {2.5} pr = {2.5} pt = {2.5}>\n            {AllActivity\n              ? processAllActivity().map(item => {\n                return (<ListItem item={item}/>)\n              })\n              : console.log(\"Null\")\n            }\n          </Box>\n        </Grid>\n      </Grid>\n    </div>\n       \n  );\n}\n\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <OutstandingBox/>\n      </header>\n      <body>\n      </body>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport './App.css';\n//import styled from 'styled-components';\n//import { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n//import { Avatar } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Card from \"@material-ui/core/Card\";\n//import CardActions from \"@material-ui/core/CardActions\";\n//import CardContent from \"@material-ui/core/CardContent\";\n//import { palette } from '@material-ui/system';\n//import { CallMissedSharp, CheckBoxOutlineBlankSharp } from '@material-ui/icons';\n\n\nconst useStyles = makeStyles((theme) => ({\n  typographyCard: {\n    \"fontFamily\": \"Poppins\",\n    \"fontSize\": 20,\n    \"color\": \"#979B82\"\n  },\n  outstandingBoxContainer:{\n    backgroundColor: \"#769E76\",\n    borderRadius: \"20px\",\n    minWidth: 430,\n    maxHeight: 320,\n    marginLeft: 120,\n    marginBottom: 200,\n    overflowY: 'scroll',\n    overflowX: 'hidden',\n    height: \"100%\",\n    '&::-webkit-scrollbar': {\n      width: '0.45em',\n      height: '0.1em',\n      scrollMarginTop: '10px'\n      \n    },\n    '&::-webkit-scrollbar-track': {\n      boxShadow: 'inset 0 0 6px rgba(0,0,0,0.00)',\n      webkitBoxShadow: 'inset 0 0 6px rgba(0,0,0,0.00)',\n      scrollMarginTop: '10px'\n    },\n    '&::-webkit-scrollbar-thumb': {\n      height: '6px',\n      backgroundColor: 'rgba(0,0,0,.3)',\n      outline: '1px solid slategrey',\n      borderRadius: '10px',\n      scrollMarginTop: '10px'\n    },\n  },\n  card:{\n    borderRadius: 10,\n    maxWidth: \"200%\"\n  },\n  minListWidth:{\n    maxWidth: 1500,\n    maxHeight: 500\n  },\n  typographyOutstandingTitle:{\n    \"fontFamily\": \"Poppins\",\n    \"fontSize\": 25,\n    \"color\": \"#979B82\", \n    textAlign: 'center'\n  },\n}));\n\nconst ListItem=()=> {\n  const classes = useStyles();\n  return (\n    <Card className = {classes.card} style={{boxShadow: \"none\"}}>\n      <Typography className = {classes.typographyCard} style={{fontWeight: 500}}>\n        Flock: Japan\n        <br />\n        $20 from Jess\n      </Typography>\n    </Card>\n  );\n}\n\nconst OutstandingBox=(props)=>{\n  const classes = useStyles();\n  return(\n\n    <div>\n      <Box pt = {6} ml = {20}>\n        <Typography className = {classes.typographyOutstandingTitle} style={{fontWeight: 500}}>\n          {props.title}\n        </Typography>\n      </Box>\n      <Grid>\n        <Grid direction = \"column\" justify = \"center\" alignItems = \"center\" className = {classes.outstandingBoxContainer} >\n          <Box pl = {2.5} pr = {2.5} pt = {2.5}>\n            <ListItem/>\n          </Box>\n          <Box pl = {2.5} pr = {2.5} pt = {2}>\n            <ListItem/>\n          </Box>\n          <Box pl = {2.5} pr = {2.5} pt = {2}>\n            <ListItem/>\n          </Box>\n          <Box pl = {2.5} pr = {2.5} pt = {2}>\n            <ListItem/>\n          </Box>\n          <Box pl = {2.5} pr = {2.5} pt = {2}>\n            <ListItem/>\n          </Box>\n          <Box pl = {2.5} pr = {2.5} pt = {2}>\n            <ListItem/>\n          </Box>\n          <Box pl = {2.5} pr = {2.5} pt = {2} pb = {2}>\n            <ListItem/>\n          </Box>\n        </Grid>\n      </Grid>\n    </div>\n       \n  );\n}\n\nconst BoxList=()=>{\n  const classes = useStyles();\n  return(\n      <Grid container spacing={0} direction  = \"row\" className = {classes.minListWidth}>\n        <Grid item lg = {4} md = {6} sm = {12} xs = {12}>\n          <OutstandingBox title = \"oustanding debits\"/>\n        </Grid>\n        <Grid item lg = {4} md = {6} sm = {12} xs = {12}>\n          <OutstandingBox title = \"oustanding credits\"/>\n        </Grid>\n        <Grid item lg = {4} md = {6} sm = {12} xs = {12}>\n          <OutstandingBox title = \"inbox\"/>\n        </Grid>\n      </Grid>    \n  );\n}\n\n//TODO:\n// have props to change bgcolor of outstanding boxes \n\nexport default BoxList;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n\n\n\n"],"sourceRoot":""}